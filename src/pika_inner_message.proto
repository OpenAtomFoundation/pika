package InnerMessage;

enum Type {
  kMetaSync        = 1;
  kTrySync         = 2;
  kDBSync          = 3;
  kBinlogSync      = 4;
  kHeatBeat        = 5;
  kRemoveSlaveNode = 6;
}

enum StatusCode {
  kOk       = 1;
  kError    = 2;
  kOther    = 3;
}

message BinlogOffset {
  required uint32  filenum = 1;
  required uint64  offset  = 2;
  // consensus use
  optional uint32  term    = 3;
  optional uint64  index   = 4;
}

message Node {
  required string ip   = 1;
  required int32  port = 2;
}

message Partition {
  required string table_name   = 1;
  required uint32 partition_id = 2;
}

message TableInfo {
  required string table_name    = 1;
  required uint32 partition_num = 2;
  repeated uint32 partition_ids = 3;
}

message PikaMeta {
  repeated TableInfo table_infos = 1;
}

message ConsensusMeta {
  optional uint32       term        = 1;
  // Leader -> Follower prev_log_offset
  // Follower -> Leader last_log_offset
  optional BinlogOffset log_offset  = 2;
  optional BinlogOffset commit      = 3;
  optional bool         reject      = 4;
  repeated BinlogOffset hint        = 5;
}

// Request message
message InnerRequest {
  // slave to master
  message MetaSync {
    required Node   node = 1;
    optional string auth = 2;
  }

  // slave to master
  message TrySync {
    required Node         node           = 1;
    required Partition    partition      = 2;
    required BinlogOffset binlog_offset  = 3;
  }

  // slave to master
  message DBSync {
    required Node         node           = 1;
    required Partition    partition      = 2;
    required BinlogOffset binlog_offset  = 3;
  }

  message BinlogSync {
    required Node         node            = 1;
    required string       table_name      = 2;
    required uint32       partition_id    = 3;
    required BinlogOffset ack_range_start = 4;
    required BinlogOffset ack_range_end   = 5;
    required int32        session_id      = 6;
    required bool         first_send      = 7;
  }

  message RemoveSlaveNode {
    required Node         node            = 1;
    required Partition    partition       = 2;
  }

  required Type            type              = 1;
  optional MetaSync        meta_sync         = 2;
  optional TrySync         try_sync          = 3;
  optional DBSync          db_sync           = 4;
  optional BinlogSync      binlog_sync       = 5;
  repeated RemoveSlaveNode remove_slave_node = 6;
  optional ConsensusMeta   consensus_meta    = 7;
}

message PartitionInfo {
  required uint32 partition_id = 1;
  required Node   master       = 2;
  repeated Node   slaves       = 3;
}

// Response message
message InnerResponse {
  // master to slave
  message MetaSync {
    message TableInfo {
      required string        table_name    = 1;
      required int32         partition_num = 2;
    }
    required bool      classic_mode = 1;
    repeated TableInfo tables_info  = 2;
  }

  // master to slave
  message TrySync {
    enum ReplyCode {
      kOk                = 1;
      kSyncPointBePurged = 2;
      kSyncPointLarger   = 3;
      kError             = 4;
    }
    required ReplyCode    reply_code      = 1;
    required Partition    partition       = 2;
    optional BinlogOffset binlog_offset   = 3;
    optional int32        session_id      = 4;
  }

  message DBSync {
    required Partition    partition       = 1;
    required int32        session_id      = 2;
  }

  // master to slave
  message BinlogSync {
    required Partition      partition     = 1;
    required BinlogOffset   binlog_offset = 2;
    required bytes          binlog        = 3;
    required int32          session_id    = 4;
  }

  message RemoveSlaveNode {
    required Node         node            = 1;
    required Partition    partition       = 2;
  }

  required Type            type              = 1;
  required StatusCode      code              = 2;
  optional string          reply             = 3;
  optional MetaSync        meta_sync         = 4;
  optional DBSync          db_sync           = 5;
  optional TrySync         try_sync          = 6;
  repeated BinlogSync      binlog_sync       = 7;
  repeated RemoveSlaveNode remove_slave_node = 8;
  // consensus use
  optional ConsensusMeta   consensus_meta    = 9;
}
