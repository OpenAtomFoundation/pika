package InnerMessage;

enum Type {
  kMetaSync   = 1;
  kTrySync    = 2;
  kBinlogSync = 3;
}

enum StatusCode {
  kOk       = 1;
  kError    = 2;
}

message BinlogOffset {
  required uint32  filenum = 1;
  required uint64  offset  = 2;
}

message Node {
  required string ip   = 1;
  required int32  port = 2;
}

message Partition {
  required string table_name   = 1;
  required uint32 partition_id = 2;
}

// Request message
message InnerRequest {
  // slave to master
  message MetaSync {
    required Node node = 1;
  }

  // slave to master
  message TrySync {
    required Node         node           = 1;
    required Partition    partition      = 2;
    required BinlogOffset binlog_offset  = 3;
    required bool         force          = 4;
  }

  // master to slave
  message BinlogSync {
    required Node           node          = 1;
    required string         table_name    = 2;
    required uint32         partition_id  = 3;
    optional BinlogOffset   binlog_offset = 4;
    required bytes          binlog        = 5;
  }

  // master to slave
  message DbSync {
    required string table_name   = 1;
    required uint32 partition_id = 2;
  }

  required Type      type         = 1;
  optional MetaSync  meta_sync    = 2;
  optional TrySync   try_sync     = 3;
  repeated BinlogSync binlog_sync = 4;
}

message PartitionInfo {
  required uint32 partition_id = 1;
  required Node   master       = 2;
  repeated Node   slaves       = 3;
}

// Response message
message InnerResponse {
  // master to slave
  message MetaSync {
    message TableInfo {
      required string        table_name    = 1;
      required int32         partition_num = 2;
    }
    required bool      classic_mode = 1;
    repeated TableInfo tables_info  = 2;
  }

  // master to slave
  message TrySync {
    enum ReplyCode {
      kOk            = 1;
      kInvalidOffset = 2;
      kWait          = 3;
      kError         = 4;
    }
    required ReplyCode reply_code = 1;
    required Partition partition  = 2;
    optional int32     sid        = 3;
  }

  // slave to master
  message BinlogSync {
    required BinlogOffset binlog_offset = 1;
  }

  // slave to master
  message DbSync {
  }
  required Type       type        = 1;
  required StatusCode code        = 2;
  optional MetaSync   meta_sync   = 3;
  optional TrySync    try_sync    = 4;
  optional BinlogSync binlog_sync = 5;
  optional DbSync     db_sync     = 6;
}
