// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: rsync_service.proto

package rsync

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_kRsyncMeta Type = 1
	Type_kRsyncFile Type = 2
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		1: "kRsyncMeta",
		2: "kRsyncFile",
	}
	Type_value = map[string]int32{
		"kRsyncMeta": 1,
		"kRsyncFile": 2,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_rsync_service_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_rsync_service_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Type(num)
	return nil
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_rsync_service_proto_rawDescGZIP(), []int{0}
}

type StatusCode int32

const (
	StatusCode_kOk  StatusCode = 1
	StatusCode_kErr StatusCode = 2
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		1: "kOk",
		2: "kErr",
	}
	StatusCode_value = map[string]int32{
		"kOk":  1,
		"kErr": 2,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_rsync_service_proto_enumTypes[1].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_rsync_service_proto_enumTypes[1]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StatusCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StatusCode(num)
	return nil
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_rsync_service_proto_rawDescGZIP(), []int{1}
}

type MetaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filenames []string `protobuf:"bytes,1,rep,name=filenames" json:"filenames,omitempty"`
}

func (x *MetaResponse) Reset() {
	*x = MetaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rsync_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetaResponse) ProtoMessage() {}

func (x *MetaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rsync_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetaResponse.ProtoReflect.Descriptor instead.
func (*MetaResponse) Descriptor() ([]byte, []int) {
	return file_rsync_service_proto_rawDescGZIP(), []int{0}
}

func (x *MetaResponse) GetFilenames() []string {
	if x != nil {
		return x.Filenames
	}
	return nil
}

type FileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename *string `protobuf:"bytes,1,req,name=filename" json:"filename,omitempty"`
	Count    *uint64 `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	Offset   *uint64 `protobuf:"varint,3,req,name=offset" json:"offset,omitempty"`
}

func (x *FileRequest) Reset() {
	*x = FileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rsync_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRequest) ProtoMessage() {}

func (x *FileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rsync_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRequest.ProtoReflect.Descriptor instead.
func (*FileRequest) Descriptor() ([]byte, []int) {
	return file_rsync_service_proto_rawDescGZIP(), []int{1}
}

func (x *FileRequest) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

func (x *FileRequest) GetCount() uint64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *FileRequest) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

type FileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Eof      *int32  `protobuf:"varint,1,req,name=eof" json:"eof,omitempty"`
	Count    *uint64 `protobuf:"varint,2,req,name=count" json:"count,omitempty"`
	Offset   *uint64 `protobuf:"varint,3,req,name=offset" json:"offset,omitempty"`
	Data     []byte  `protobuf:"bytes,4,req,name=data" json:"data,omitempty"`
	Checksum *string `protobuf:"bytes,5,req,name=checksum" json:"checksum,omitempty"`
	Filename *string `protobuf:"bytes,6,req,name=filename" json:"filename,omitempty"`
}

func (x *FileResponse) Reset() {
	*x = FileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rsync_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResponse) ProtoMessage() {}

func (x *FileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rsync_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResponse.ProtoReflect.Descriptor instead.
func (*FileResponse) Descriptor() ([]byte, []int) {
	return file_rsync_service_proto_rawDescGZIP(), []int{2}
}

func (x *FileResponse) GetEof() int32 {
	if x != nil && x.Eof != nil {
		return *x.Eof
	}
	return 0
}

func (x *FileResponse) GetCount() uint64 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *FileResponse) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *FileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileResponse) GetChecksum() string {
	if x != nil && x.Checksum != nil {
		return *x.Checksum
	}
	return ""
}

func (x *FileResponse) GetFilename() string {
	if x != nil && x.Filename != nil {
		return *x.Filename
	}
	return ""
}

type RsyncRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        *Type        `protobuf:"varint,1,req,name=type,enum=RsyncService.Type" json:"type,omitempty"`
	ReaderIndex *int32       `protobuf:"varint,2,req,name=reader_index,json=readerIndex" json:"reader_index,omitempty"`
	DbName      *string      `protobuf:"bytes,3,req,name=db_name,json=dbName" json:"db_name,omitempty"`
	SlotId      *uint32      `protobuf:"varint,4,req,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	FileReq     *FileRequest `protobuf:"bytes,5,opt,name=file_req,json=fileReq" json:"file_req,omitempty"`
}

func (x *RsyncRequest) Reset() {
	*x = RsyncRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rsync_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsyncRequest) ProtoMessage() {}

func (x *RsyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rsync_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsyncRequest.ProtoReflect.Descriptor instead.
func (*RsyncRequest) Descriptor() ([]byte, []int) {
	return file_rsync_service_proto_rawDescGZIP(), []int{3}
}

func (x *RsyncRequest) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_kRsyncMeta
}

func (x *RsyncRequest) GetReaderIndex() int32 {
	if x != nil && x.ReaderIndex != nil {
		return *x.ReaderIndex
	}
	return 0
}

func (x *RsyncRequest) GetDbName() string {
	if x != nil && x.DbName != nil {
		return *x.DbName
	}
	return ""
}

func (x *RsyncRequest) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *RsyncRequest) GetFileReq() *FileRequest {
	if x != nil {
		return x.FileReq
	}
	return nil
}

type RsyncResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         *Type         `protobuf:"varint,1,req,name=type,enum=RsyncService.Type" json:"type,omitempty"`
	ReaderIndex  *int32        `protobuf:"varint,2,req,name=reader_index,json=readerIndex" json:"reader_index,omitempty"`
	SnapshotUuid *string       `protobuf:"bytes,3,req,name=snapshot_uuid,json=snapshotUuid" json:"snapshot_uuid,omitempty"`
	DbName       *string       `protobuf:"bytes,4,req,name=db_name,json=dbName" json:"db_name,omitempty"`
	SlotId       *uint32       `protobuf:"varint,5,req,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	Code         *StatusCode   `protobuf:"varint,6,req,name=code,enum=RsyncService.StatusCode" json:"code,omitempty"`
	MetaResp     *MetaResponse `protobuf:"bytes,7,opt,name=meta_resp,json=metaResp" json:"meta_resp,omitempty"`
	FileResp     *FileResponse `protobuf:"bytes,8,opt,name=file_resp,json=fileResp" json:"file_resp,omitempty"`
}

func (x *RsyncResponse) Reset() {
	*x = RsyncResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rsync_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RsyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RsyncResponse) ProtoMessage() {}

func (x *RsyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rsync_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RsyncResponse.ProtoReflect.Descriptor instead.
func (*RsyncResponse) Descriptor() ([]byte, []int) {
	return file_rsync_service_proto_rawDescGZIP(), []int{4}
}

func (x *RsyncResponse) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_kRsyncMeta
}

func (x *RsyncResponse) GetReaderIndex() int32 {
	if x != nil && x.ReaderIndex != nil {
		return *x.ReaderIndex
	}
	return 0
}

func (x *RsyncResponse) GetSnapshotUuid() string {
	if x != nil && x.SnapshotUuid != nil {
		return *x.SnapshotUuid
	}
	return ""
}

func (x *RsyncResponse) GetDbName() string {
	if x != nil && x.DbName != nil {
		return *x.DbName
	}
	return ""
}

func (x *RsyncResponse) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *RsyncResponse) GetCode() StatusCode {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return StatusCode_kOk
}

func (x *RsyncResponse) GetMetaResp() *MetaResponse {
	if x != nil {
		return x.MetaResp
	}
	return nil
}

func (x *RsyncResponse) GetFileResp() *FileResponse {
	if x != nil {
		return x.FileResp
	}
	return nil
}

var File_rsync_service_proto protoreflect.FileDescriptor

var file_rsync_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x72, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x52, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x22, 0x2c, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x22, 0x57, 0x0a, 0x0b, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x9a, 0x01, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6f, 0x66, 0x18, 0x01, 0x20, 0x02, 0x28, 0x05, 0x52, 0x03, 0x65, 0x6f, 0x66, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x02, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x02, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x73, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xc1, 0x01, 0x0a, 0x0c, 0x52, 0x73, 0x79, 0x6e,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x52, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65,
	0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x52, 0x73, 0x79, 0x6e, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x22, 0xd1, 0x02, 0x0a, 0x0d,
	0x52, 0x73, 0x79, 0x6e, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x52, 0x73,
	0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x55, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06,
	0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x52, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x52, 0x73, 0x79, 0x6e, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x52, 0x73, 0x79, 0x6e,
	0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2a,
	0x26, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x52, 0x73, 0x79, 0x6e,
	0x63, 0x4d, 0x65, 0x74, 0x61, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x6b, 0x52, 0x73, 0x79, 0x6e,
	0x63, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x02, 0x2a, 0x1f, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x6b, 0x4f, 0x6b, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x6b, 0x45, 0x72, 0x72, 0x10, 0x02, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x73, 0x79, 0x6e, 0x63,
}

var (
	file_rsync_service_proto_rawDescOnce sync.Once
	file_rsync_service_proto_rawDescData = file_rsync_service_proto_rawDesc
)

func file_rsync_service_proto_rawDescGZIP() []byte {
	file_rsync_service_proto_rawDescOnce.Do(func() {
		file_rsync_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_rsync_service_proto_rawDescData)
	})
	return file_rsync_service_proto_rawDescData
}

var file_rsync_service_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_rsync_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_rsync_service_proto_goTypes = []any{
	(Type)(0),             // 0: RsyncService.Type
	(StatusCode)(0),       // 1: RsyncService.StatusCode
	(*MetaResponse)(nil),  // 2: RsyncService.MetaResponse
	(*FileRequest)(nil),   // 3: RsyncService.FileRequest
	(*FileResponse)(nil),  // 4: RsyncService.FileResponse
	(*RsyncRequest)(nil),  // 5: RsyncService.RsyncRequest
	(*RsyncResponse)(nil), // 6: RsyncService.RsyncResponse
}
var file_rsync_service_proto_depIdxs = []int32{
	0, // 0: RsyncService.RsyncRequest.type:type_name -> RsyncService.Type
	3, // 1: RsyncService.RsyncRequest.file_req:type_name -> RsyncService.FileRequest
	0, // 2: RsyncService.RsyncResponse.type:type_name -> RsyncService.Type
	1, // 3: RsyncService.RsyncResponse.code:type_name -> RsyncService.StatusCode
	2, // 4: RsyncService.RsyncResponse.meta_resp:type_name -> RsyncService.MetaResponse
	4, // 5: RsyncService.RsyncResponse.file_resp:type_name -> RsyncService.FileResponse
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_rsync_service_proto_init() }
func file_rsync_service_proto_init() {
	if File_rsync_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rsync_service_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*MetaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rsync_service_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*FileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rsync_service_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*FileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rsync_service_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*RsyncRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rsync_service_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*RsyncResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rsync_service_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rsync_service_proto_goTypes,
		DependencyIndexes: file_rsync_service_proto_depIdxs,
		EnumInfos:         file_rsync_service_proto_enumTypes,
		MessageInfos:      file_rsync_service_proto_msgTypes,
	}.Build()
	File_rsync_service_proto = out.File
	file_rsync_service_proto_rawDesc = nil
	file_rsync_service_proto_goTypes = nil
	file_rsync_service_proto_depIdxs = nil
}
