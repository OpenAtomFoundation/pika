// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: pika_inner_message.proto

package inner

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Type int32

const (
	Type_kMetaSync        Type = 1
	Type_kTrySync         Type = 2
	Type_kDBSync          Type = 3
	Type_kBinlogSync      Type = 4
	Type_kHeatBeat        Type = 5
	Type_kRemoveSlaveNode Type = 6
)

// Enum value maps for Type.
var (
	Type_name = map[int32]string{
		1: "kMetaSync",
		2: "kTrySync",
		3: "kDBSync",
		4: "kBinlogSync",
		5: "kHeatBeat",
		6: "kRemoveSlaveNode",
	}
	Type_value = map[string]int32{
		"kMetaSync":        1,
		"kTrySync":         2,
		"kDBSync":          3,
		"kBinlogSync":      4,
		"kHeatBeat":        5,
		"kRemoveSlaveNode": 6,
	}
)

func (x Type) Enum() *Type {
	p := new(Type)
	*p = x
	return p
}

func (x Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Type) Descriptor() protoreflect.EnumDescriptor {
	return file_pika_inner_message_proto_enumTypes[0].Descriptor()
}

func (Type) Type() protoreflect.EnumType {
	return &file_pika_inner_message_proto_enumTypes[0]
}

func (x Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Type(num)
	return nil
}

// Deprecated: Use Type.Descriptor instead.
func (Type) EnumDescriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{0}
}

type StatusCode int32

const (
	StatusCode_kOk    StatusCode = 1
	StatusCode_kError StatusCode = 2
	StatusCode_kOther StatusCode = 3
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		1: "kOk",
		2: "kError",
		3: "kOther",
	}
	StatusCode_value = map[string]int32{
		"kOk":    1,
		"kError": 2,
		"kOther": 3,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pika_inner_message_proto_enumTypes[1].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_pika_inner_message_proto_enumTypes[1]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StatusCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StatusCode(num)
	return nil
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{1}
}

type InnerResponse_TrySync_ReplyCode int32

const (
	InnerResponse_TrySync_kOk                InnerResponse_TrySync_ReplyCode = 1
	InnerResponse_TrySync_kSyncPointBePurged InnerResponse_TrySync_ReplyCode = 2
	InnerResponse_TrySync_kSyncPointLarger   InnerResponse_TrySync_ReplyCode = 3
	InnerResponse_TrySync_kError             InnerResponse_TrySync_ReplyCode = 4
)

// Enum value maps for InnerResponse_TrySync_ReplyCode.
var (
	InnerResponse_TrySync_ReplyCode_name = map[int32]string{
		1: "kOk",
		2: "kSyncPointBePurged",
		3: "kSyncPointLarger",
		4: "kError",
	}
	InnerResponse_TrySync_ReplyCode_value = map[string]int32{
		"kOk":                1,
		"kSyncPointBePurged": 2,
		"kSyncPointLarger":   3,
		"kError":             4,
	}
)

func (x InnerResponse_TrySync_ReplyCode) Enum() *InnerResponse_TrySync_ReplyCode {
	p := new(InnerResponse_TrySync_ReplyCode)
	*p = x
	return p
}

func (x InnerResponse_TrySync_ReplyCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InnerResponse_TrySync_ReplyCode) Descriptor() protoreflect.EnumDescriptor {
	return file_pika_inner_message_proto_enumTypes[2].Descriptor()
}

func (InnerResponse_TrySync_ReplyCode) Type() protoreflect.EnumType {
	return &file_pika_inner_message_proto_enumTypes[2]
}

func (x InnerResponse_TrySync_ReplyCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *InnerResponse_TrySync_ReplyCode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = InnerResponse_TrySync_ReplyCode(num)
	return nil
}

// Deprecated: Use InnerResponse_TrySync_ReplyCode.Descriptor instead.
func (InnerResponse_TrySync_ReplyCode) EnumDescriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{8, 1, 0}
}

type BinlogOffset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filenum *uint32 `protobuf:"varint,1,req,name=filenum" json:"filenum,omitempty"`
	Offset  *uint64 `protobuf:"varint,2,req,name=offset" json:"offset,omitempty"`
	// consensus use
	Term  *uint32 `protobuf:"varint,3,opt,name=term" json:"term,omitempty"`
	Index *uint64 `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
}

func (x *BinlogOffset) Reset() {
	*x = BinlogOffset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BinlogOffset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BinlogOffset) ProtoMessage() {}

func (x *BinlogOffset) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BinlogOffset.ProtoReflect.Descriptor instead.
func (*BinlogOffset) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{0}
}

func (x *BinlogOffset) GetFilenum() uint32 {
	if x != nil && x.Filenum != nil {
		return *x.Filenum
	}
	return 0
}

func (x *BinlogOffset) GetOffset() uint64 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *BinlogOffset) GetTerm() uint32 {
	if x != nil && x.Term != nil {
		return *x.Term
	}
	return 0
}

func (x *BinlogOffset) GetIndex() uint64 {
	if x != nil && x.Index != nil {
		return *x.Index
	}
	return 0
}

type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   *string `protobuf:"bytes,1,req,name=ip" json:"ip,omitempty"`
	Port *int32  `protobuf:"varint,2,req,name=port" json:"port,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetIp() string {
	if x != nil && x.Ip != nil {
		return *x.Ip
	}
	return ""
}

func (x *Node) GetPort() int32 {
	if x != nil && x.Port != nil {
		return *x.Port
	}
	return 0
}

type Slot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbName *string `protobuf:"bytes,1,req,name=db_name,json=dbName" json:"db_name,omitempty"`
	SlotId *uint32 `protobuf:"varint,2,req,name=slot_id,json=slotId" json:"slot_id,omitempty"`
}

func (x *Slot) Reset() {
	*x = Slot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slot) ProtoMessage() {}

func (x *Slot) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slot.ProtoReflect.Descriptor instead.
func (*Slot) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{2}
}

func (x *Slot) GetDbName() string {
	if x != nil && x.DbName != nil {
		return *x.DbName
	}
	return ""
}

func (x *Slot) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

type DBInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbName  *string  `protobuf:"bytes,1,req,name=db_name,json=dbName" json:"db_name,omitempty"`
	SlotNum *uint32  `protobuf:"varint,2,req,name=slot_num,json=slotNum" json:"slot_num,omitempty"`
	SlotIds []uint32 `protobuf:"varint,3,rep,name=slot_ids,json=slotIds" json:"slot_ids,omitempty"`
}

func (x *DBInfo) Reset() {
	*x = DBInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DBInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DBInfo) ProtoMessage() {}

func (x *DBInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DBInfo.ProtoReflect.Descriptor instead.
func (*DBInfo) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{3}
}

func (x *DBInfo) GetDbName() string {
	if x != nil && x.DbName != nil {
		return *x.DbName
	}
	return ""
}

func (x *DBInfo) GetSlotNum() uint32 {
	if x != nil && x.SlotNum != nil {
		return *x.SlotNum
	}
	return 0
}

func (x *DBInfo) GetSlotIds() []uint32 {
	if x != nil {
		return x.SlotIds
	}
	return nil
}

type PikaMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbInfos []*DBInfo `protobuf:"bytes,1,rep,name=db_infos,json=dbInfos" json:"db_infos,omitempty"`
}

func (x *PikaMeta) Reset() {
	*x = PikaMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PikaMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PikaMeta) ProtoMessage() {}

func (x *PikaMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PikaMeta.ProtoReflect.Descriptor instead.
func (*PikaMeta) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{4}
}

func (x *PikaMeta) GetDbInfos() []*DBInfo {
	if x != nil {
		return x.DbInfos
	}
	return nil
}

type ConsensusMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Term *uint32 `protobuf:"varint,1,opt,name=term" json:"term,omitempty"`
	// Leader -> Follower prev_log_offset
	// Follower -> Leader last_log_offset
	LogOffset *BinlogOffset   `protobuf:"bytes,2,opt,name=log_offset,json=logOffset" json:"log_offset,omitempty"`
	Commit    *BinlogOffset   `protobuf:"bytes,3,opt,name=commit" json:"commit,omitempty"`
	Reject    *bool           `protobuf:"varint,4,opt,name=reject" json:"reject,omitempty"`
	Hint      []*BinlogOffset `protobuf:"bytes,5,rep,name=hint" json:"hint,omitempty"`
}

func (x *ConsensusMeta) Reset() {
	*x = ConsensusMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsensusMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsensusMeta) ProtoMessage() {}

func (x *ConsensusMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsensusMeta.ProtoReflect.Descriptor instead.
func (*ConsensusMeta) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{5}
}

func (x *ConsensusMeta) GetTerm() uint32 {
	if x != nil && x.Term != nil {
		return *x.Term
	}
	return 0
}

func (x *ConsensusMeta) GetLogOffset() *BinlogOffset {
	if x != nil {
		return x.LogOffset
	}
	return nil
}

func (x *ConsensusMeta) GetCommit() *BinlogOffset {
	if x != nil {
		return x.Commit
	}
	return nil
}

func (x *ConsensusMeta) GetReject() bool {
	if x != nil && x.Reject != nil {
		return *x.Reject
	}
	return false
}

func (x *ConsensusMeta) GetHint() []*BinlogOffset {
	if x != nil {
		return x.Hint
	}
	return nil
}

// Request message
type InnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *Type                           `protobuf:"varint,1,req,name=type,enum=InnerMessage.Type" json:"type,omitempty"`
	MetaSync        *InnerRequest_MetaSync          `protobuf:"bytes,2,opt,name=meta_sync,json=metaSync" json:"meta_sync,omitempty"`
	TrySync         *InnerRequest_TrySync           `protobuf:"bytes,3,opt,name=try_sync,json=trySync" json:"try_sync,omitempty"`
	DbSync          *InnerRequest_DBSync            `protobuf:"bytes,4,opt,name=db_sync,json=dbSync" json:"db_sync,omitempty"`
	BinlogSync      *InnerRequest_BinlogSync        `protobuf:"bytes,5,opt,name=binlog_sync,json=binlogSync" json:"binlog_sync,omitempty"`
	RemoveSlaveNode []*InnerRequest_RemoveSlaveNode `protobuf:"bytes,6,rep,name=remove_slave_node,json=removeSlaveNode" json:"remove_slave_node,omitempty"`
	ConsensusMeta   *ConsensusMeta                  `protobuf:"bytes,7,opt,name=consensus_meta,json=consensusMeta" json:"consensus_meta,omitempty"`
}

func (x *InnerRequest) Reset() {
	*x = InnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerRequest) ProtoMessage() {}

func (x *InnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerRequest.ProtoReflect.Descriptor instead.
func (*InnerRequest) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{6}
}

func (x *InnerRequest) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_kMetaSync
}

func (x *InnerRequest) GetMetaSync() *InnerRequest_MetaSync {
	if x != nil {
		return x.MetaSync
	}
	return nil
}

func (x *InnerRequest) GetTrySync() *InnerRequest_TrySync {
	if x != nil {
		return x.TrySync
	}
	return nil
}

func (x *InnerRequest) GetDbSync() *InnerRequest_DBSync {
	if x != nil {
		return x.DbSync
	}
	return nil
}

func (x *InnerRequest) GetBinlogSync() *InnerRequest_BinlogSync {
	if x != nil {
		return x.BinlogSync
	}
	return nil
}

func (x *InnerRequest) GetRemoveSlaveNode() []*InnerRequest_RemoveSlaveNode {
	if x != nil {
		return x.RemoveSlaveNode
	}
	return nil
}

func (x *InnerRequest) GetConsensusMeta() *ConsensusMeta {
	if x != nil {
		return x.ConsensusMeta
	}
	return nil
}

type SlotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotId *uint32 `protobuf:"varint,1,req,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	Master *Node   `protobuf:"bytes,2,req,name=master" json:"master,omitempty"`
	Slaves []*Node `protobuf:"bytes,3,rep,name=slaves" json:"slaves,omitempty"`
}

func (x *SlotInfo) Reset() {
	*x = SlotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotInfo) ProtoMessage() {}

func (x *SlotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotInfo.ProtoReflect.Descriptor instead.
func (*SlotInfo) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{7}
}

func (x *SlotInfo) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *SlotInfo) GetMaster() *Node {
	if x != nil {
		return x.Master
	}
	return nil
}

func (x *SlotInfo) GetSlaves() []*Node {
	if x != nil {
		return x.Slaves
	}
	return nil
}

// Response message
type InnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            *Type                            `protobuf:"varint,1,req,name=type,enum=InnerMessage.Type" json:"type,omitempty"`
	Code            *StatusCode                      `protobuf:"varint,2,req,name=code,enum=InnerMessage.StatusCode" json:"code,omitempty"`
	Reply           *string                          `protobuf:"bytes,3,opt,name=reply" json:"reply,omitempty"`
	MetaSync        *InnerResponse_MetaSync          `protobuf:"bytes,4,opt,name=meta_sync,json=metaSync" json:"meta_sync,omitempty"`
	DbSync          *InnerResponse_DBSync            `protobuf:"bytes,5,opt,name=db_sync,json=dbSync" json:"db_sync,omitempty"`
	TrySync         *InnerResponse_TrySync           `protobuf:"bytes,6,opt,name=try_sync,json=trySync" json:"try_sync,omitempty"`
	BinlogSync      []*InnerResponse_BinlogSync      `protobuf:"bytes,7,rep,name=binlog_sync,json=binlogSync" json:"binlog_sync,omitempty"`
	RemoveSlaveNode []*InnerResponse_RemoveSlaveNode `protobuf:"bytes,8,rep,name=remove_slave_node,json=removeSlaveNode" json:"remove_slave_node,omitempty"`
	// consensus use
	ConsensusMeta *ConsensusMeta `protobuf:"bytes,9,opt,name=consensus_meta,json=consensusMeta" json:"consensus_meta,omitempty"`
}

func (x *InnerResponse) Reset() {
	*x = InnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerResponse) ProtoMessage() {}

func (x *InnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerResponse.ProtoReflect.Descriptor instead.
func (*InnerResponse) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{8}
}

func (x *InnerResponse) GetType() Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Type_kMetaSync
}

func (x *InnerResponse) GetCode() StatusCode {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return StatusCode_kOk
}

func (x *InnerResponse) GetReply() string {
	if x != nil && x.Reply != nil {
		return *x.Reply
	}
	return ""
}

func (x *InnerResponse) GetMetaSync() *InnerResponse_MetaSync {
	if x != nil {
		return x.MetaSync
	}
	return nil
}

func (x *InnerResponse) GetDbSync() *InnerResponse_DBSync {
	if x != nil {
		return x.DbSync
	}
	return nil
}

func (x *InnerResponse) GetTrySync() *InnerResponse_TrySync {
	if x != nil {
		return x.TrySync
	}
	return nil
}

func (x *InnerResponse) GetBinlogSync() []*InnerResponse_BinlogSync {
	if x != nil {
		return x.BinlogSync
	}
	return nil
}

func (x *InnerResponse) GetRemoveSlaveNode() []*InnerResponse_RemoveSlaveNode {
	if x != nil {
		return x.RemoveSlaveNode
	}
	return nil
}

func (x *InnerResponse) GetConsensusMeta() *ConsensusMeta {
	if x != nil {
		return x.ConsensusMeta
	}
	return nil
}

// slave to master
type InnerRequest_MetaSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node   `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	Auth *string `protobuf:"bytes,2,opt,name=auth" json:"auth,omitempty"`
}

func (x *InnerRequest_MetaSync) Reset() {
	*x = InnerRequest_MetaSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerRequest_MetaSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerRequest_MetaSync) ProtoMessage() {}

func (x *InnerRequest_MetaSync) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerRequest_MetaSync.ProtoReflect.Descriptor instead.
func (*InnerRequest_MetaSync) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{6, 0}
}

func (x *InnerRequest_MetaSync) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *InnerRequest_MetaSync) GetAuth() string {
	if x != nil && x.Auth != nil {
		return *x.Auth
	}
	return ""
}

// slave to master
type InnerRequest_TrySync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node         *Node         `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	Slot         *Slot         `protobuf:"bytes,2,req,name=slot" json:"slot,omitempty"`
	BinlogOffset *BinlogOffset `protobuf:"bytes,3,req,name=binlog_offset,json=binlogOffset" json:"binlog_offset,omitempty"`
}

func (x *InnerRequest_TrySync) Reset() {
	*x = InnerRequest_TrySync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerRequest_TrySync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerRequest_TrySync) ProtoMessage() {}

func (x *InnerRequest_TrySync) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerRequest_TrySync.ProtoReflect.Descriptor instead.
func (*InnerRequest_TrySync) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{6, 1}
}

func (x *InnerRequest_TrySync) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *InnerRequest_TrySync) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *InnerRequest_TrySync) GetBinlogOffset() *BinlogOffset {
	if x != nil {
		return x.BinlogOffset
	}
	return nil
}

// slave to master
type InnerRequest_DBSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node         *Node         `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	Slot         *Slot         `protobuf:"bytes,2,req,name=slot" json:"slot,omitempty"`
	BinlogOffset *BinlogOffset `protobuf:"bytes,3,req,name=binlog_offset,json=binlogOffset" json:"binlog_offset,omitempty"`
}

func (x *InnerRequest_DBSync) Reset() {
	*x = InnerRequest_DBSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerRequest_DBSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerRequest_DBSync) ProtoMessage() {}

func (x *InnerRequest_DBSync) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerRequest_DBSync.ProtoReflect.Descriptor instead.
func (*InnerRequest_DBSync) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{6, 2}
}

func (x *InnerRequest_DBSync) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *InnerRequest_DBSync) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *InnerRequest_DBSync) GetBinlogOffset() *BinlogOffset {
	if x != nil {
		return x.BinlogOffset
	}
	return nil
}

type InnerRequest_BinlogSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node          *Node         `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	DbName        *string       `protobuf:"bytes,2,req,name=db_name,json=dbName" json:"db_name,omitempty"`
	SlotId        *uint32       `protobuf:"varint,3,req,name=slot_id,json=slotId" json:"slot_id,omitempty"`
	AckRangeStart *BinlogOffset `protobuf:"bytes,4,req,name=ack_range_start,json=ackRangeStart" json:"ack_range_start,omitempty"`
	AckRangeEnd   *BinlogOffset `protobuf:"bytes,5,req,name=ack_range_end,json=ackRangeEnd" json:"ack_range_end,omitempty"`
	SessionId     *int32        `protobuf:"varint,6,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
	FirstSend     *bool         `protobuf:"varint,7,req,name=first_send,json=firstSend" json:"first_send,omitempty"`
}

func (x *InnerRequest_BinlogSync) Reset() {
	*x = InnerRequest_BinlogSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerRequest_BinlogSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerRequest_BinlogSync) ProtoMessage() {}

func (x *InnerRequest_BinlogSync) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerRequest_BinlogSync.ProtoReflect.Descriptor instead.
func (*InnerRequest_BinlogSync) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{6, 3}
}

func (x *InnerRequest_BinlogSync) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *InnerRequest_BinlogSync) GetDbName() string {
	if x != nil && x.DbName != nil {
		return *x.DbName
	}
	return ""
}

func (x *InnerRequest_BinlogSync) GetSlotId() uint32 {
	if x != nil && x.SlotId != nil {
		return *x.SlotId
	}
	return 0
}

func (x *InnerRequest_BinlogSync) GetAckRangeStart() *BinlogOffset {
	if x != nil {
		return x.AckRangeStart
	}
	return nil
}

func (x *InnerRequest_BinlogSync) GetAckRangeEnd() *BinlogOffset {
	if x != nil {
		return x.AckRangeEnd
	}
	return nil
}

func (x *InnerRequest_BinlogSync) GetSessionId() int32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

func (x *InnerRequest_BinlogSync) GetFirstSend() bool {
	if x != nil && x.FirstSend != nil {
		return *x.FirstSend
	}
	return false
}

type InnerRequest_RemoveSlaveNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	Slot *Slot `protobuf:"bytes,2,req,name=slot" json:"slot,omitempty"`
}

func (x *InnerRequest_RemoveSlaveNode) Reset() {
	*x = InnerRequest_RemoveSlaveNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerRequest_RemoveSlaveNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerRequest_RemoveSlaveNode) ProtoMessage() {}

func (x *InnerRequest_RemoveSlaveNode) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerRequest_RemoveSlaveNode.ProtoReflect.Descriptor instead.
func (*InnerRequest_RemoveSlaveNode) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{6, 4}
}

func (x *InnerRequest_RemoveSlaveNode) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *InnerRequest_RemoveSlaveNode) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

// master to slave
type InnerResponse_MetaSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClassicMode   *bool                            `protobuf:"varint,1,req,name=classic_mode,json=classicMode" json:"classic_mode,omitempty"`
	DbsInfo       []*InnerResponse_MetaSync_DBInfo `protobuf:"bytes,2,rep,name=dbs_info,json=dbsInfo" json:"dbs_info,omitempty"`
	RunId         *string                          `protobuf:"bytes,3,req,name=run_id,json=runId" json:"run_id,omitempty"`
	ReplicationId *string                          `protobuf:"bytes,4,opt,name=replication_id,json=replicationId" json:"replication_id,omitempty"`
}

func (x *InnerResponse_MetaSync) Reset() {
	*x = InnerResponse_MetaSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerResponse_MetaSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerResponse_MetaSync) ProtoMessage() {}

func (x *InnerResponse_MetaSync) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerResponse_MetaSync.ProtoReflect.Descriptor instead.
func (*InnerResponse_MetaSync) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{8, 0}
}

func (x *InnerResponse_MetaSync) GetClassicMode() bool {
	if x != nil && x.ClassicMode != nil {
		return *x.ClassicMode
	}
	return false
}

func (x *InnerResponse_MetaSync) GetDbsInfo() []*InnerResponse_MetaSync_DBInfo {
	if x != nil {
		return x.DbsInfo
	}
	return nil
}

func (x *InnerResponse_MetaSync) GetRunId() string {
	if x != nil && x.RunId != nil {
		return *x.RunId
	}
	return ""
}

func (x *InnerResponse_MetaSync) GetReplicationId() string {
	if x != nil && x.ReplicationId != nil {
		return *x.ReplicationId
	}
	return ""
}

// master to slave
type InnerResponse_TrySync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReplyCode    *InnerResponse_TrySync_ReplyCode `protobuf:"varint,1,req,name=reply_code,json=replyCode,enum=InnerMessage.InnerResponse_TrySync_ReplyCode" json:"reply_code,omitempty"`
	Slot         *Slot                            `protobuf:"bytes,2,req,name=slot" json:"slot,omitempty"`
	BinlogOffset *BinlogOffset                    `protobuf:"bytes,3,opt,name=binlog_offset,json=binlogOffset" json:"binlog_offset,omitempty"`
	SessionId    *int32                           `protobuf:"varint,4,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *InnerResponse_TrySync) Reset() {
	*x = InnerResponse_TrySync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerResponse_TrySync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerResponse_TrySync) ProtoMessage() {}

func (x *InnerResponse_TrySync) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerResponse_TrySync.ProtoReflect.Descriptor instead.
func (*InnerResponse_TrySync) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{8, 1}
}

func (x *InnerResponse_TrySync) GetReplyCode() InnerResponse_TrySync_ReplyCode {
	if x != nil && x.ReplyCode != nil {
		return *x.ReplyCode
	}
	return InnerResponse_TrySync_kOk
}

func (x *InnerResponse_TrySync) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *InnerResponse_TrySync) GetBinlogOffset() *BinlogOffset {
	if x != nil {
		return x.BinlogOffset
	}
	return nil
}

func (x *InnerResponse_TrySync) GetSessionId() int32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

type InnerResponse_DBSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot      *Slot  `protobuf:"bytes,1,req,name=slot" json:"slot,omitempty"`
	SessionId *int32 `protobuf:"varint,2,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *InnerResponse_DBSync) Reset() {
	*x = InnerResponse_DBSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerResponse_DBSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerResponse_DBSync) ProtoMessage() {}

func (x *InnerResponse_DBSync) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerResponse_DBSync.ProtoReflect.Descriptor instead.
func (*InnerResponse_DBSync) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{8, 2}
}

func (x *InnerResponse_DBSync) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *InnerResponse_DBSync) GetSessionId() int32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

// master to slave
type InnerResponse_BinlogSync struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot         *Slot         `protobuf:"bytes,1,req,name=slot" json:"slot,omitempty"`
	BinlogOffset *BinlogOffset `protobuf:"bytes,2,req,name=binlog_offset,json=binlogOffset" json:"binlog_offset,omitempty"`
	Binlog       []byte        `protobuf:"bytes,3,req,name=binlog" json:"binlog,omitempty"`
	SessionId    *int32        `protobuf:"varint,4,req,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *InnerResponse_BinlogSync) Reset() {
	*x = InnerResponse_BinlogSync{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerResponse_BinlogSync) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerResponse_BinlogSync) ProtoMessage() {}

func (x *InnerResponse_BinlogSync) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerResponse_BinlogSync.ProtoReflect.Descriptor instead.
func (*InnerResponse_BinlogSync) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{8, 3}
}

func (x *InnerResponse_BinlogSync) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

func (x *InnerResponse_BinlogSync) GetBinlogOffset() *BinlogOffset {
	if x != nil {
		return x.BinlogOffset
	}
	return nil
}

func (x *InnerResponse_BinlogSync) GetBinlog() []byte {
	if x != nil {
		return x.Binlog
	}
	return nil
}

func (x *InnerResponse_BinlogSync) GetSessionId() int32 {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return 0
}

type InnerResponse_RemoveSlaveNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,req,name=node" json:"node,omitempty"`
	Slot *Slot `protobuf:"bytes,2,req,name=slot" json:"slot,omitempty"`
}

func (x *InnerResponse_RemoveSlaveNode) Reset() {
	*x = InnerResponse_RemoveSlaveNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerResponse_RemoveSlaveNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerResponse_RemoveSlaveNode) ProtoMessage() {}

func (x *InnerResponse_RemoveSlaveNode) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerResponse_RemoveSlaveNode.ProtoReflect.Descriptor instead.
func (*InnerResponse_RemoveSlaveNode) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{8, 4}
}

func (x *InnerResponse_RemoveSlaveNode) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *InnerResponse_RemoveSlaveNode) GetSlot() *Slot {
	if x != nil {
		return x.Slot
	}
	return nil
}

type InnerResponse_MetaSync_DBInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DbName        *string `protobuf:"bytes,1,req,name=db_name,json=dbName" json:"db_name,omitempty"`
	SlotNum       *int32  `protobuf:"varint,2,req,name=slot_num,json=slotNum" json:"slot_num,omitempty"`
	DbInstanceNum *int32  `protobuf:"varint,3,req,name=db_instance_num,json=dbInstanceNum" json:"db_instance_num,omitempty"`
}

func (x *InnerResponse_MetaSync_DBInfo) Reset() {
	*x = InnerResponse_MetaSync_DBInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pika_inner_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InnerResponse_MetaSync_DBInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InnerResponse_MetaSync_DBInfo) ProtoMessage() {}

func (x *InnerResponse_MetaSync_DBInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pika_inner_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InnerResponse_MetaSync_DBInfo.ProtoReflect.Descriptor instead.
func (*InnerResponse_MetaSync_DBInfo) Descriptor() ([]byte, []int) {
	return file_pika_inner_message_proto_rawDescGZIP(), []int{8, 0, 0}
}

func (x *InnerResponse_MetaSync_DBInfo) GetDbName() string {
	if x != nil && x.DbName != nil {
		return *x.DbName
	}
	return ""
}

func (x *InnerResponse_MetaSync_DBInfo) GetSlotNum() int32 {
	if x != nil && x.SlotNum != nil {
		return *x.SlotNum
	}
	return 0
}

func (x *InnerResponse_MetaSync_DBInfo) GetDbInstanceNum() int32 {
	if x != nil && x.DbInstanceNum != nil {
		return *x.DbInstanceNum
	}
	return 0
}

var File_pika_inner_message_proto protoreflect.FileDescriptor

var file_pika_inner_message_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x69, 0x6b, 0x61, 0x5f, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x6a, 0x0a, 0x0c, 0x42, 0x69, 0x6e, 0x6c,
	0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65,
	0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x2a, 0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74,
	0x22, 0x38, 0x0a, 0x04, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x0d, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x06, 0x44, 0x42,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0d, 0x52,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74,
	0x49, 0x64, 0x73, 0x22, 0x3b, 0x0a, 0x08, 0x50, 0x69, 0x6b, 0x61, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x2f, 0x0a, 0x08, 0x64, 0x62, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x44, 0x42, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x64, 0x62, 0x49, 0x6e, 0x66, 0x6f, 0x73,
	0x22, 0xda, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x74, 0x65, 0x72, 0x6d, 0x12, 0x39, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x5f, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x6c, 0x6f, 0x67,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x12, 0x32, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x42, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x06, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2e, 0x0a,
	0x04, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x6c, 0x6f,
	0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x04, 0x68, 0x69, 0x6e, 0x74, 0x22, 0xe6, 0x09,
	0x0a, 0x0c, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x73,
	0x79, 0x6e, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x3d, 0x0a, 0x08, 0x74, 0x72, 0x79, 0x5f,
	0x73, 0x79, 0x6e, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x07,
	0x74, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x3a, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x42, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x06, 0x64, 0x62, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x46, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x79,
	0x6e, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x42, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x52,
	0x0a, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x56, 0x0a, 0x11, 0x72,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x1a, 0x46, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x53,
	0x79, 0x6e, 0x63, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61,
	0x75, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x75, 0x74, 0x68, 0x1a,
	0x9a, 0x01, 0x0a, 0x07, 0x54, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x26, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x62,
	0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x42, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x0c,
	0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0x99, 0x01, 0x0a,
	0x06, 0x44, 0x42, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x26, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x69, 0x6e, 0x6c, 0x6f,
	0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x69,
	0x6e, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x0c, 0x62, 0x69, 0x6e, 0x6c,
	0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x1a, 0xa8, 0x02, 0x0a, 0x0a, 0x42, 0x69, 0x6e,
	0x6c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x42, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x6c, 0x6f, 0x67,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x0d, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x6c,
	0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x65,
	0x6e, 0x64, 0x18, 0x07, 0x20, 0x02, 0x28, 0x08, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53,
	0x65, 0x6e, 0x64, 0x1a, 0x61, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x61,
	0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x26,
	0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x7b, 0x0a, 0x08, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x06, 0x6d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52,
	0x06, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x6c, 0x61, 0x76, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x06, 0x73, 0x6c, 0x61,
	0x76, 0x65, 0x73, 0x22, 0xd2, 0x0b, 0x0a, 0x0d, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x72,
	0x65, 0x70, 0x6c, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x41, 0x0a, 0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x3b, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x44, 0x42, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x06, 0x64, 0x62, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x3e, 0x0a, 0x08, 0x74, 0x72, 0x79, 0x5f, 0x73, 0x79, 0x6e, 0x63, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x07, 0x74, 0x72, 0x79, 0x53, 0x79, 0x6e,
	0x63, 0x12, 0x47, 0x0a, 0x0b, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x79, 0x6e, 0x63,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x52, 0x0a,
	0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x57, 0x0a, 0x11, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e, 0x73, 0x75, 0x73,
	0x5f, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x73, 0x65,
	0x6e, 0x73, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x65, 0x6e,
	0x73, 0x75, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x1a, 0x99, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61,
	0x53, 0x79, 0x6e, 0x63, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x63, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x08, 0x52, 0x0b, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x63, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x64, 0x62, 0x73, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x2e,
	0x44, 0x42, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x64, 0x62, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x15, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x02, 0x28, 0x09, 0x52,
	0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x64, 0x0a,
	0x06, 0x44, 0x42, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x62, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x06, 0x64, 0x62, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x02,
	0x28, 0x05, 0x52, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x64,
	0x62, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03,
	0x20, 0x02, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x62, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x4e, 0x75, 0x6d, 0x1a, 0xaf, 0x02, 0x0a, 0x07, 0x54, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x4c, 0x0a, 0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x54, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e,
	0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x3f, 0x0a, 0x0d, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x5f,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x6c,
	0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x52, 0x0c, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67,
	0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4e, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x6b, 0x4f, 0x6b, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x6b,
	0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x42, 0x65, 0x50, 0x75, 0x72, 0x67, 0x65,
	0x64, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x53, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x72, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x6b, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x10, 0x04, 0x1a, 0x4f, 0x0a, 0x06, 0x44, 0x42, 0x53, 0x79, 0x6e, 0x63, 0x12,
	0x26, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0xac, 0x01, 0x0a, 0x0a, 0x42, 0x69, 0x6e, 0x6c, 0x6f,
	0x67, 0x53, 0x79, 0x6e, 0x63, 0x12, 0x26, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x3f, 0x0a,
	0x0d, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x02, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x42, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x52, 0x0c, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x02, 0x28, 0x0c, 0x52, 0x06,
	0x62, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x02, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x61, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x12, 0x26, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x6c,
	0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x2a, 0x66, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x6b, 0x54, 0x72, 0x79, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x02, 0x12, 0x0b, 0x0a,
	0x07, 0x6b, 0x44, 0x42, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x6b, 0x42,
	0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x53, 0x79, 0x6e, 0x63, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x6b,
	0x48, 0x65, 0x61, 0x74, 0x42, 0x65, 0x61, 0x74, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x6b, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x53, 0x6c, 0x61, 0x76, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x10, 0x06,
	0x2a, 0x2d, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x07,
	0x0a, 0x03, 0x6b, 0x4f, 0x6b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x6b, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x6b, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x10, 0x03, 0x42,
	0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x6e, 0x65, 0x72,
}

var (
	file_pika_inner_message_proto_rawDescOnce sync.Once
	file_pika_inner_message_proto_rawDescData = file_pika_inner_message_proto_rawDesc
)

func file_pika_inner_message_proto_rawDescGZIP() []byte {
	file_pika_inner_message_proto_rawDescOnce.Do(func() {
		file_pika_inner_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_pika_inner_message_proto_rawDescData)
	})
	return file_pika_inner_message_proto_rawDescData
}

var file_pika_inner_message_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_pika_inner_message_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_pika_inner_message_proto_goTypes = []any{
	(Type)(0),                             // 0: InnerMessage.Type
	(StatusCode)(0),                       // 1: InnerMessage.StatusCode
	(InnerResponse_TrySync_ReplyCode)(0),  // 2: InnerMessage.InnerResponse.TrySync.ReplyCode
	(*BinlogOffset)(nil),                  // 3: InnerMessage.BinlogOffset
	(*Node)(nil),                          // 4: InnerMessage.Node
	(*Slot)(nil),                          // 5: InnerMessage.Slot
	(*DBInfo)(nil),                        // 6: InnerMessage.DBInfo
	(*PikaMeta)(nil),                      // 7: InnerMessage.PikaMeta
	(*ConsensusMeta)(nil),                 // 8: InnerMessage.ConsensusMeta
	(*InnerRequest)(nil),                  // 9: InnerMessage.InnerRequest
	(*SlotInfo)(nil),                      // 10: InnerMessage.SlotInfo
	(*InnerResponse)(nil),                 // 11: InnerMessage.InnerResponse
	(*InnerRequest_MetaSync)(nil),         // 12: InnerMessage.InnerRequest.MetaSync
	(*InnerRequest_TrySync)(nil),          // 13: InnerMessage.InnerRequest.TrySync
	(*InnerRequest_DBSync)(nil),           // 14: InnerMessage.InnerRequest.DBSync
	(*InnerRequest_BinlogSync)(nil),       // 15: InnerMessage.InnerRequest.BinlogSync
	(*InnerRequest_RemoveSlaveNode)(nil),  // 16: InnerMessage.InnerRequest.RemoveSlaveNode
	(*InnerResponse_MetaSync)(nil),        // 17: InnerMessage.InnerResponse.MetaSync
	(*InnerResponse_TrySync)(nil),         // 18: InnerMessage.InnerResponse.TrySync
	(*InnerResponse_DBSync)(nil),          // 19: InnerMessage.InnerResponse.DBSync
	(*InnerResponse_BinlogSync)(nil),      // 20: InnerMessage.InnerResponse.BinlogSync
	(*InnerResponse_RemoveSlaveNode)(nil), // 21: InnerMessage.InnerResponse.RemoveSlaveNode
	(*InnerResponse_MetaSync_DBInfo)(nil), // 22: InnerMessage.InnerResponse.MetaSync.DBInfo
}
var file_pika_inner_message_proto_depIdxs = []int32{
	6,  // 0: InnerMessage.PikaMeta.db_infos:type_name -> InnerMessage.DBInfo
	3,  // 1: InnerMessage.ConsensusMeta.log_offset:type_name -> InnerMessage.BinlogOffset
	3,  // 2: InnerMessage.ConsensusMeta.commit:type_name -> InnerMessage.BinlogOffset
	3,  // 3: InnerMessage.ConsensusMeta.hint:type_name -> InnerMessage.BinlogOffset
	0,  // 4: InnerMessage.InnerRequest.type:type_name -> InnerMessage.Type
	12, // 5: InnerMessage.InnerRequest.meta_sync:type_name -> InnerMessage.InnerRequest.MetaSync
	13, // 6: InnerMessage.InnerRequest.try_sync:type_name -> InnerMessage.InnerRequest.TrySync
	14, // 7: InnerMessage.InnerRequest.db_sync:type_name -> InnerMessage.InnerRequest.DBSync
	15, // 8: InnerMessage.InnerRequest.binlog_sync:type_name -> InnerMessage.InnerRequest.BinlogSync
	16, // 9: InnerMessage.InnerRequest.remove_slave_node:type_name -> InnerMessage.InnerRequest.RemoveSlaveNode
	8,  // 10: InnerMessage.InnerRequest.consensus_meta:type_name -> InnerMessage.ConsensusMeta
	4,  // 11: InnerMessage.SlotInfo.master:type_name -> InnerMessage.Node
	4,  // 12: InnerMessage.SlotInfo.slaves:type_name -> InnerMessage.Node
	0,  // 13: InnerMessage.InnerResponse.type:type_name -> InnerMessage.Type
	1,  // 14: InnerMessage.InnerResponse.code:type_name -> InnerMessage.StatusCode
	17, // 15: InnerMessage.InnerResponse.meta_sync:type_name -> InnerMessage.InnerResponse.MetaSync
	19, // 16: InnerMessage.InnerResponse.db_sync:type_name -> InnerMessage.InnerResponse.DBSync
	18, // 17: InnerMessage.InnerResponse.try_sync:type_name -> InnerMessage.InnerResponse.TrySync
	20, // 18: InnerMessage.InnerResponse.binlog_sync:type_name -> InnerMessage.InnerResponse.BinlogSync
	21, // 19: InnerMessage.InnerResponse.remove_slave_node:type_name -> InnerMessage.InnerResponse.RemoveSlaveNode
	8,  // 20: InnerMessage.InnerResponse.consensus_meta:type_name -> InnerMessage.ConsensusMeta
	4,  // 21: InnerMessage.InnerRequest.MetaSync.node:type_name -> InnerMessage.Node
	4,  // 22: InnerMessage.InnerRequest.TrySync.node:type_name -> InnerMessage.Node
	5,  // 23: InnerMessage.InnerRequest.TrySync.slot:type_name -> InnerMessage.Slot
	3,  // 24: InnerMessage.InnerRequest.TrySync.binlog_offset:type_name -> InnerMessage.BinlogOffset
	4,  // 25: InnerMessage.InnerRequest.DBSync.node:type_name -> InnerMessage.Node
	5,  // 26: InnerMessage.InnerRequest.DBSync.slot:type_name -> InnerMessage.Slot
	3,  // 27: InnerMessage.InnerRequest.DBSync.binlog_offset:type_name -> InnerMessage.BinlogOffset
	4,  // 28: InnerMessage.InnerRequest.BinlogSync.node:type_name -> InnerMessage.Node
	3,  // 29: InnerMessage.InnerRequest.BinlogSync.ack_range_start:type_name -> InnerMessage.BinlogOffset
	3,  // 30: InnerMessage.InnerRequest.BinlogSync.ack_range_end:type_name -> InnerMessage.BinlogOffset
	4,  // 31: InnerMessage.InnerRequest.RemoveSlaveNode.node:type_name -> InnerMessage.Node
	5,  // 32: InnerMessage.InnerRequest.RemoveSlaveNode.slot:type_name -> InnerMessage.Slot
	22, // 33: InnerMessage.InnerResponse.MetaSync.dbs_info:type_name -> InnerMessage.InnerResponse.MetaSync.DBInfo
	2,  // 34: InnerMessage.InnerResponse.TrySync.reply_code:type_name -> InnerMessage.InnerResponse.TrySync.ReplyCode
	5,  // 35: InnerMessage.InnerResponse.TrySync.slot:type_name -> InnerMessage.Slot
	3,  // 36: InnerMessage.InnerResponse.TrySync.binlog_offset:type_name -> InnerMessage.BinlogOffset
	5,  // 37: InnerMessage.InnerResponse.DBSync.slot:type_name -> InnerMessage.Slot
	5,  // 38: InnerMessage.InnerResponse.BinlogSync.slot:type_name -> InnerMessage.Slot
	3,  // 39: InnerMessage.InnerResponse.BinlogSync.binlog_offset:type_name -> InnerMessage.BinlogOffset
	4,  // 40: InnerMessage.InnerResponse.RemoveSlaveNode.node:type_name -> InnerMessage.Node
	5,  // 41: InnerMessage.InnerResponse.RemoveSlaveNode.slot:type_name -> InnerMessage.Slot
	42, // [42:42] is the sub-list for method output_type
	42, // [42:42] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_pika_inner_message_proto_init() }
func file_pika_inner_message_proto_init() {
	if File_pika_inner_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pika_inner_message_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*BinlogOffset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Slot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DBInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*PikaMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ConsensusMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*InnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SlotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*InnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*InnerRequest_MetaSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*InnerRequest_TrySync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*InnerRequest_DBSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*InnerRequest_BinlogSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*InnerRequest_RemoveSlaveNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*InnerResponse_MetaSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*InnerResponse_TrySync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*InnerResponse_DBSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*InnerResponse_BinlogSync); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*InnerResponse_RemoveSlaveNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pika_inner_message_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*InnerResponse_MetaSync_DBInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pika_inner_message_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pika_inner_message_proto_goTypes,
		DependencyIndexes: file_pika_inner_message_proto_depIdxs,
		EnumInfos:         file_pika_inner_message_proto_enumTypes,
		MessageInfos:      file_pika_inner_message_proto_msgTypes,
	}.Build()
	File_pika_inner_message_proto = out.File
	file_pika_inner_message_proto_rawDesc = nil
	file_pika_inner_message_proto_goTypes = nil
	file_pika_inner_message_proto_depIdxs = nil
}
