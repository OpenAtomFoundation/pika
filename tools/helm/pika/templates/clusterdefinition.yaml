apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: pika
  labels:
    {{- include "pika.labels" . | nindent 4 }}
spec:
  type: pika
  connectionCredential:
    username: default
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_pika)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_pika)"
  componentDefs:
    - name: pika
      workloadType: Replication
      characterType: pika
      service:
        ports:
          - name: pika
            port: 9221
            targetPort: pika
      configSpecs:
        - name: pika-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
          - name: pika
            ports:
              - name: pika
                containerPort: 9221
            volumeMounts:
              - name: data
                mountPath: /data
              - name: config
                mountPath: /etc/pika
            command:
              - "/pika/bin/pika"
            args:
              - "-c"
              - "/etc/pika/pika.conf"
    - name: redis-sentinel
      workloadType: Stateful
      characterType: redis
      service:
        ports:
          - name: redis-sentinel
            targetPort: redis-sentinel
            port: 26379
      configSpecs:
        - name: codis-sentinel-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      scriptSpecs:
        - name: redis-scripts
          templateRef: redis-sentinel-scripts
          namespace: {{ .Release.Namespace }}
          volumeName: scripts
          defaultMode: 493
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
        - name: redis-sentinel
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 26379
              name: redis-sentinel
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/sentinel
            - name: scripts
              mountPath: /scripts
          command:
            - /bin/bash
          args:
            - -c
            - |
              set -e
              /scripts/redis-sentinel-start.sh
          lifecycle:
            postStart:
              exec:
                command: [ "/scripts/redis-sentinel-post-start.sh" ]
    - name: etcd
      workloadType: Stateful
      characterType: etcd
      probes:
      configSpecs:
      podSpec:
        containers:
          - name: etcd
            imagePullPolicy: "IfNotPresent"
            securityContext:
              runAsNonRoot: true
              runAsUser: 1001
            livenessProbe:
              exec:
                command:
                  - /opt/bitnami/scripts/etcd/healthcheck.sh
              failureThreshold: 5
              initialDelaySeconds: 60
              periodSeconds: 30
              successThreshold: 1
              timeoutSeconds: 5
            readinessProbe:
              exec:
                command:
                  - /opt/bitnami/scripts/etcd/healthcheck.sh
              failureThreshold: 5
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              timeoutSeconds: 5
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /bitnami/etcd
                name: data
            ports:
              - name: client
                containerPort: 2379
              - name: peer
                containerPort: 2380
            env:
              - name: BITNAMI_DEBUG
                value: "false"
              - name: MY_POD_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.podIP
              - name: MY_POD_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: ETCDCTL_API
                value: "3"
              - name: ETCD_ON_K8S
                value: "yes"
              - name: ETCD_START_FROM_SNAPSHOT
                value: "no"
              - name: ETCD_DISASTER_RECOVERY
                value: "no"
              - name: ETCD_NAME
                value: $(MY_POD_NAME)
              - name: ETCD_DATA_DIR
                value: /bitnami/etcd/data
              - name: ETCD_LOG_LEVEL
                value: info
              - name: ALLOW_NONE_AUTHENTICATION
                value: "yes"
              - name: ETCD_ADVERTISE_CLIENT_URLS
                value: http://$(MY_POD_NAME).$(KB_CLUSTER_NAME)-etcd-headless.default.svc.cluster.local:2379
              - name: ETCD_LISTEN_CLIENT_URLS
                value: http://0.0.0.0:2379
              - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
                value: http://$(MY_POD_NAME).$(KB_CLUSTER_NAME)-etcd-headless.default.svc.cluster.local:2380
              - name: ETCD_LISTEN_PEER_URLS
                value: http://0.0.0.0:2380
              - name: ETCD_AUTO_COMPACTION_MODE
                value: revision
              - name: ETCD_AUTO_COMPACTION_RETENTION
                value: "1000"
              - name: ETCD_QUOTA_BACKEND_BYTES
                value: "4294967296"
              - name: ETCD_HEARTBEAT_INTERVAL
                value: "500"
              - name: ETCD_ELECTION_TIMEOUT
                value: "2500"
              - name: ETCD_ENABLE_V2
                value: "true"
    - name: codis-proxy
      workloadType: Stateless
      characterType: pika
      service:
        ports:
          - name: proxy
            targetPort: proxy
            port: 11080
          - name: admin
            targetPort: admin
            port: 19000
      configSpecs:
        - name: codis-proxy-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      podSpec:
        initContainers:
          - name: wait-etcd
            env:
            - name: ETCD_ADDR
              value: "pika-cluster-etcd-headless"
            - name: DASHBOARD_ADDR
              value: "pika-cluster-codis-dashboard"
            image: busybox:1.28
            command:
              - 'sh'
              - '-c'
              - "until nc -z ${ETCD_ADDR} 2379; do echo waiting for etcd; sleep 2; done;"
              - "until nc -z ${DASHBOARD_ADDR} 18080; do echo waiting for etcd; sleep 2; done;"
        containers:
        - name: codis-proxy
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 11080
              name: proxy
            - containerPort: 19000
              name: admin
          volumeMounts:
            - name: config
              mountPath: /etc/codis
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ETCD_ADDR
              value: "pika-cluster-etcd-0.pika-cluster-etcd-headless:2379,pika-cluster-etcd-1.pika-cluster-etcd-headless:2379,pika-cluster-etcd-1.pika-cluster-etcd-headless:2379"
            - name: DASHBOARD_ADDR
              value: "pika-cluster-codis-dashboard:18080"
            - name: PRODUCT_NAME
              value: "codis-test"
          command:
            - "/codis/bin/codis-proxy"
          args:
            - "-c"
            - "/etc/codis/proxy.toml"
            - "--host-admin"
            - "$(POD_IP):11080"
            - "--host-proxy"
            - "$(POD_IP):19000"
            - "--etcd"
            - "$(ETCD_ADDR)"
            - "--product_name"
            - "$(PRODUCT_NAME)"
            - "--pidfile"
            - "log/proxy.pid"
            - "--log-level=DEBUG"
          lifecycle:
            preStop:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "/codis/bin/codis-admin --dashboard=${DASHBOARD_ADDR} --remove-proxy --addr=${POD_IP}:11080 1>/dev/null 2>&1"
    - name: codis-fe
      workloadType: Stateless
      characterType: pika
      service:
        ports:
          - name: fe
            targetPort: fe
            port: 8080
      podSpec:
        initContainers:
          - name: wait-etcd
            env:
              - name: ETCD_ADDR
                value: "pika-cluster-etcd-headless"
              - name: DASHBOARD_ADDR
                value: "pika-cluster-codis-dashboard"
            image: busybox:1.28
            command:
              - 'sh'
              - '-c'
              - "until nc -z ${ETCD_ADDR} 2379; do echo waiting for etcd; sleep 2; done;"
              - "until nc -z ${DASHBOARD_ADDR} 18080; do echo waiting for etcd; sleep 2; done;"
        containers:
        - name: codis-fe
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: fe
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ETCD_ADDR
              value: "pika-cluster-etcd-0.pika-cluster-etcd-headless:2379,pika-cluster-etcd-1.pika-cluster-etcd-headless:2379,pika-cluster-etcd-1.pika-cluster-etcd-headless:2379"
          command:
            - "/codis/bin/codis-fe"
          args:
          - "--etcd"
          - "$(ETCD_ADDR)"
          - "--listen=0.0.0.0:8080"
          - "--assets=/codis/bin/assets"
          - "--log-level=DEBUG"
    - name: codis-dashboard
      workloadType: Stateful
      characterType: pika
      service:
        ports:
          - name: dashboard
            targetPort: dashboard
            port: 18080
      configSpecs:
        - name: codis-dashboard-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      volumeTypes:
        - name: data
          type: data
      podSpec:
        initContainers:
          - name: wait-etcd
            env:
              - name: ETCD_ADDR
                value: "pika-cluster-etcd-headless"
            image: busybox:1.28
            command:
              - 'sh'
              - '-c'
              - "until nc -z ${ETCD_ADDR} 2379; do echo waiting for etcd; sleep 2; done;"
        containers:
        - name: codis-dashboard
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 18080
              name: dashboard
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/codis
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ETCD_ADDR
              value: "pika-cluster-etcd-0.pika-cluster-etcd-headless:2379,pika-cluster-etcd-1.pika-cluster-etcd-headless:2379,pika-cluster-etcd-1.pika-cluster-etcd-headless:2379"
            - name: PRODUCT_NAME
              value: "codis-test"
          command:
            - "/codis/bin/codis-dashboard"
          args:
            - "-c"
            - "/etc/codis/dashboard.toml"
            - "--host-admin"
            - "$(POD_IP):18080"
            - "--etcd"
            - "$(ETCD_ADDR)"
            - "--product_name"
            - "$(PRODUCT_NAME)"
            - "--pidfile"
            - "log/dashboard.pid"
            - "--remove-lock"
            - "--log-level=DEBUG"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "-c", "/codis/bin/codis-admin --dashboard-list  --etcd=${ETCD_ADDR}"]
            preStop:
              exec:
                command: ["/bin/sh", "-c", "PID=$(cat log/dashboard.pid) && kill $PID && while ps -p 1 > /dev/null; do sleep 1; done"]
