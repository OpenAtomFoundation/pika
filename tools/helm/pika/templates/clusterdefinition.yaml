apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: pika
  labels:
    {{- include "pika.labels" . | nindent 4 }}
spec:
  type: pika
  connectionCredential:
    username: default
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_pika)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_pika)"
  componentDefs:
    - name: pika
      workloadType: Replication
      characterType: pika
      enabledLogs:
        - log
      probes:
        roleProbe:
          failureThreshold: 2
          periodSeconds: 2
          timeoutSeconds: 1
      service:
        ports:
          - name: pika
            port: 9221
            targetPort: pika
      configSpecs:
        - name: pika-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
          - name: pika
            ports:
              - name: pika
                containerPort: 9221
            volumeMounts:
              - name: data
                mountPath: /data
              - name: config
                mountPath: /etc/pika
            command: ["/pika/bin/pika", "-c", "/etc/pika.conf"]
    - name: redis-sentinel
      workloadType: Stateful
      characterType: redis
      service:
        ports:
          - name: redis-sentinel
            targetPort: redis-sentinel
            port: 26379
      configSpecs:
        - name: codis-sentinel-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
        - name: redis-sentinel
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 26379
              name: redis-sentinel
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/conf
          command:
            - /bin/bash
          args:
            - -c
            - |
              set -e
              /scripts/redis-sentinel-start.sh
          lifecycle:
            postStart:
              exec:
                command: [ "/scripts/redis-sentinel-post-start.sh" ]
    - name: codis-proxy
      workloadType: Replication
      characterType: pika
      service:
        ports:
          - name: proxy
            targetPort: proxy
            port: 11080
          - name: admin
            targetPort: admin
            port: 19000
      configSpecs:
        - name: codis-proxy-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
        - name: codis-proxy
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 11080
              name: proxy
            - containerPort: 19000
              name: admin
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/conf
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ZK_ADDR
              value: "zookeeper:2181"
            - name: DASHBOARD_ADDR
              value: "codis-dashboard:18080"
            - name: PRODUCT_NAME
              value: "codis-test"
          command:
            - "codis-proxy"
          args:
            - "-l"
            - "log/$(POD_NAME).log"
            - "-c"
            - "$(CODIS_PATH)/config/proxy.toml"
            - "--host-admin"
            - "$(POD_IP):11080"
            - "--host-proxy"
            - "$(POD_IP):19000"
            - "--zookeeper"
            - "$(ZK_ADDR)"
            - "--product_name"
            - "$(PRODUCT_NAME)"
            - "--pidfile"
            - "log/proxy.pid"
          lifecycle:
            postStart:
              exec:
                command:
                  - "/bin/sh"
                  - "-c"
                  - "codis-admin --dashboard=${DASHBOARD_ADDR} --remove-proxy --addr=${POD_IP}:11080 1>/dev/null 2>&1"
    - name: codis-ha
      workloadType: Stateful
      characterType: pika
      service:
        ports:
          - name: codis-ha
            targetPort: codis-ha
            port: 12345
      configSpecs:
        - name: codis-ha-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
        - name: codis-ha
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 26379
              name: pika-sentinel
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/conf
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: DASHBOARD_ADDR
              value: "codis-dashboard:18080"
          command: ["codis-ha"]
          args: ["-l","log/$(POD_NAME).log","--interval","5","--dashboard=$(DASHBOARD_ADDR)"]
    - name: codis-fe
      workloadType: Stateless
      characterType: pika
      service:
        ports:
          - name: fe
            targetPort: fe
            port: 8080
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
        - name: codis-fe
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080
              name: fe
          volumeMounts:
            - name: data
              mountPath: /data
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ZK_ADDR
              value: "zookeeper:2181"
          command: ["codis-fe"]
          args:
          - "-l"
          - "log/$(POD_NAME).log"
          - "--zookeeper"
          - "$(ZK_ADDR)"
          - "--listen=$(POD_IP):8080"
          - "--assets=$(CODIS_PATH)/bin/assets"
    - name: codis-dashboard
      workloadType: Stateful
      characterType: pika
      service:
        ports:
          - name: dashboard
            targetPort: dashboard
            port: 18080
      configSpecs:
        - name: codis-dashboard-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      volumeTypes:
        - name: data
          type: data
      podSpec:
        containers:
        - name: codis-dashboard
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 18080
              name: dashboard
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/conf
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ZK_ADDR
              value: "zookeeper:2181"
            - name: PRODUCT_NAME
              value: "codis-test"
          command:
            - "codis-dashboard"
          args:
            - "-l"
            - "log/$(POD_NAME).log"
            - "-c"
            - "$(CODIS_PATH)/config/dashboard.toml"
            - "--host-admin"
            - "$(POD_IP):18080"
            -  "--zookeeper"
            - "$(ZK_ADDR)"
            - "--product_name"
            - "$(PRODUCT_NAME)"
            - "--pidfile"
            - "log/dashboard.pid"
            - "--remove-lock"
          lifecycle:
            postStart:
              exec:
                command: ["/bin/bash", "-c", "codis-admin --dashboard-list  --zookeeper=${ZK_ADDR}"]
            preStop:
              exec:
                command: [/bin/sh", "-c", "PID=$(cat log/dashboard.pid) && kill $PID && while ps -p 1 > /dev/null; do sleep 1; done"]
