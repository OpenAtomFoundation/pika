apiVersion: apps.kubeblocks.io/v1alpha1
kind: ClusterDefinition
metadata:
  name: pika
  labels:
    {{- include "pika.labels" . | nindent 4 }}
spec:
  type: pika
  connectionCredential:
    username: default
    password: "$(RANDOM_PASSWD)"
    endpoint: "$(SVC_FQDN):$(SVC_PORT_pika)"
    host: "$(SVC_FQDN)"
    port: "$(SVC_PORT_pika)"
  componentDefs:
    - name: pika-group
      workloadType: Stateful
      characterType: pika
      service:
        ports:
          - name: pika
            port: 9221
            targetPort: pika
      configSpecs:
        - name: pika-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      scriptSpecs:
        - name: pika-script
          templateRef: pika-script-template
          namespace: {{ .Release.Namespace }}
          volumeName: script
          defaultMode: 0555
      volumeTypes:
        - name: data
          type: data
      postStartSpec:
        cmdExecutorConfig:
          image: {{ include "codis.image" . }}
          command:
            - "/bin/bash"
          args:
            - "-c"
            - "/script/admin.sh --rebalance"
        scriptSpecSelectors:
          - name: pika-script
      podSpec:
        initContainers:
          - name: init-config
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            command:
              - /bin/sh
              - -ec
              - |
                if [ ! -f "/data/pika.conf" ];then cp /etc/pika/pika.conf /data/pika.conf; fi
            volumeMounts:
              - name: config
                mountPath: /etc/pika
              - name: data
                mountPath: /data
        containers:
          - name: pika
            ports:
              - name: pika
                containerPort: 9221
            volumeMounts:
              - name: config
                mountPath: /etc/pika
              - name: data
                mountPath: /data
            command:
              - "/pika/bin/pika"
            args:
              - "-c"
              - "/data/pika.conf"
          - name: codis-admin
            volumeMounts:
              - name: script
                mountPath: /script
            command:
              - "/bin/bash"
            args:
              - "-c"
              - "/script/admin.sh --register-server;tail -f /dev/null"
            lifecycle:
              preStop:
                exec:
                  command:
                    - "/bin/bash"
                    - "-c"
                    - "/script/admin.sh --remove-server"
    - name: etcd
      workloadType: Stateful
      characterType: etcd
      service:
        ports:
          - name: client
            port: 2379
            targetPort: client
          - name: peer
            port: 2380
            targetPort: peer
      volumeTypes:
        - name: data
          type: data
      configSpecs:
      podSpec:
        initContainers:
          - name: volume-permissions
            image: busybox:1.28
            imagePullPolicy: IfNotPresent
            command:
              - /bin/sh
              - -ec
              - |
                chown -R 1001:1001 /bitnami/etcd
            securityContext:
              runAsUser: 0
            volumeMounts:
              - name: data
                mountPath: /bitnami/etcd
        containers:
          - name: etcd
            imagePullPolicy: "IfNotPresent"
            securityContext:
              runAsNonRoot: false
              runAsUser: 1001
              allowPrivilegeEscalation: false
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /bitnami/etcd
                name: data
            ports:
              - name: client
                containerPort: 2379
              - name: peer
                containerPort: 2380
            env:
              - name: BITNAMI_DEBUG
                value: "true"
              - name: MY_POD_IP
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: status.podIP
              - name: MY_POD_NAME
                valueFrom:
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.name
              - name: MY_STS_NAME
                value: $(KB_CLUSTER_COMP_NAME)
              - name: ETCDCTL_API
                value: "3"
              - name: ETCD_ON_K8S
                value: "yes"
              - name: ETCD_START_FROM_SNAPSHOT
                value: "no"
              - name: ETCD_DISASTER_RECOVERY
                value: "no"
              - name: ETCD_NAME
                value: $(MY_POD_NAME)
              - name: ETCD_DATA_DIR
                value: /bitnami/etcd/data
              - name: ETCD_LOG_LEVEL
                value: info
              - name: ALLOW_NONE_AUTHENTICATION
                value: "yes"
              - name: ETCD_INITIAL_CLUSTER_TOKEN
                value: "$(KB_CLUSTER_NAME)"
              - name: ETCD_INITIAL_CLUSTER_STATE
                value: "new"
              - name: ETCD_INITIAL_CLUSTER
                value: "{{ include "etcd.initialCluster" .}}"
              - name: ETCD_CLUSTER_DOMAIN
                value: "{{ include "etcd.clusterDomain" .}}"
              - name: ETCD_AUTO_COMPACTION_MODE
                value: "periodic"
              - name: ETCD_AUTO_COMPACTION_RETENTION
                value: "1h"
              - name: ETCD_ADVERTISE_CLIENT_URLS
                value: "{{ include "etcd.advertiseClientURLs" .}}"
              - name: ETCD_LISTEN_CLIENT_URLS
                value: http://0.0.0.0:2379
              - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
                value: http://$(KB_POD_FQDN){{ .Values.clusterDomain }}:2380
              - name: ETCD_LISTEN_PEER_URLS
                value: http://0.0.0.0:2380
              - name: ETCD_QUOTA_BACKEND_BYTES
                value: "4294967296"
              - name: ETCD_HEARTBEAT_INTERVAL
                value: "500"
              - name: ETCD_ELECTION_TIMEOUT
                value: "2500"
              - name: ETCD_ENABLE_V2
                value: "true"
    - name: pika-exporter
      workloadType: Stateless
      characterType: pika
      monitor:
        builtIn: false
        exporterConfig:
          scrapePath: /metrics
          scrapePort: 9121
      service:
        ports:
          - name: exporter
            targetPort: exporter
            port: 9121
      configSpecs:
        - name: pika-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      podSpec:
        initContainers:
          - name: wait-codis-dashboard
            env:
              - name: DASHBOARD_ADDR
                value: "$(KB_CLUSTER_NAME)-codis-dashboard"
            image: busybox:1.28
            command:
              - 'sh'
              - '-c'
              - "until nc -z ${DASHBOARD_ADDR} 18080; do echo waiting for codis dashboard; sleep 2; done;"
        containers:
          - name: pika-exporter
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 9121
                name: exporter
            volumeMounts:
              - name: config
                mountPath: /etc/pika
            env:
              - name: DASHBOARD_ADDR
                value: "$(KB_CLUSTER_NAME)-codis-dashboard"
            command:
              - "/pika/bin/pika_exporter"
            args:
              - "-config"
              - "/etc/pika/info.toml"
              - "-codis.addr"
              - "http://$(DASHBOARD_ADDR):18080/topom"
    - name: codis-proxy
      workloadType: Stateful
      characterType: pika
      service:
        ports:
          - name: proxy
            targetPort: proxy
            port: 11080
          - name: admin
            targetPort: admin
            port: 19000
      configSpecs:
        - name: codis-proxy-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      podSpec:
        initContainers:
          - name: wait-etcd
            env:
              - name: ETCD_ADDR
                value: "{{ include "etcd.clusterDomain" .}}"
              - name: DASHBOARD_ADDR
                value: "$(KB_CLUSTER_NAME)-codis-dashboard"
            image: busybox:1.28
            command:
              - 'sh'
              - '-c'
              - "until nc -z ${ETCD_ADDR} 2379; do echo waiting for etcd; sleep 2; done;"
              - "until nc -z ${DASHBOARD_ADDR} 18080; do echo waiting for etcd; sleep 2; done;"
        containers:
          - name: codis-proxy
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 11080
                name: proxy
              - containerPort: 19000
                name: admin
            volumeMounts:
              - name: config
                mountPath: /etc/codis
            env:
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: ETCD_ADDR
                value: "{{ include "etcd.clusterDomain" .}}:2379"
              - name: DASHBOARD_ADDR
                value: "$(KB_CLUSTER_NAME)-codis-dashboard:18080"
              - name: PRODUCT_NAME
                value: "$(KB_CLUSTER_NAME)"
            command:
              - "/codis/bin/codis-proxy"
            args:
              - "-c"
              - "/etc/codis/proxy.toml"
              - "--host-admin"
              - "$(POD_IP):11080"
              - "--host-proxy"
              - "$(POD_IP):19000"
              - "--etcd"
              - "$(ETCD_ADDR)"
              - "--product_name"
              - "$(PRODUCT_NAME)"
              - "--pidfile"
              - "log/proxy.pid"
              - "--log-level=DEBUG"
            lifecycle:
              preStop:
                exec:
                  command:
                    - "/bin/sh"
                    - "-c"
                    - "/codis/bin/codis-admin --dashboard=${DASHBOARD_ADDR} --remove-proxy --addr=${POD_IP}:11080 1>/dev/null 2>&1"
    - name: codis-fe
      workloadType: Stateless
      characterType: pika
      service:
        ports:
          - name: fe
            targetPort: fe
            port: 8080
      podSpec:
        initContainers:
          - name: wait-etcd
            env:
              - name: ETCD_ADDR
                value: "{{ include "etcd.clusterDomain" .}}"
              - name: DASHBOARD_ADDR
                value: "$(KB_CLUSTER_NAME)-codis-dashboard"
            image: busybox:1.28
            command:
              - 'sh'
              - '-c'
              - "until nc -z ${ETCD_ADDR} 2379; do echo waiting for etcd; sleep 2; done;"
              - "until nc -z ${DASHBOARD_ADDR} 18080; do echo waiting for etcd; sleep 2; done;"
        containers:
          - name: codis-fe
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 8080
                name: fe
            env:
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: ETCD_ADDR
                value: "{{ include "etcd.clusterDomain" .}}:2379"
            command:
              - "/codis/bin/codis-fe"
            args:
              - "--etcd"
              - "$(ETCD_ADDR)"
              - "--listen=0.0.0.0:8080"
              - "--assets=/codis/bin/assets"
              - "--log-level=DEBUG"
    - name: codis-dashboard
      workloadType: Stateful
      characterType: pika
      service:
        ports:
          - name: dashboard
            targetPort: dashboard
            port: 18080
      configSpecs:
        - name: codis-dashboard-config
          templateRef: pika-conf-template
          namespace: {{ .Release.Namespace }}
          volumeName: config
      podSpec:
        initContainers:
          - name: wait-etcd
            env:
              - name: ETCD_ADDR
                value: "{{ include "etcd.clusterDomain" .}}"
            image: busybox:1.28
            command:
              - 'sh'
              - '-c'
              - "until nc -z ${ETCD_ADDR} 2379; do echo waiting for etcd; sleep 2; done;"
        containers:
          - name: codis-dashboard
            imagePullPolicy: IfNotPresent
            ports:
              - containerPort: 18080
                name: dashboard
            volumeMounts:
              - name: config
                mountPath: /etc/codis
            env:
              - name: POD_IP
                valueFrom:
                  fieldRef:
                    fieldPath: status.podIP
              - name: POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: ETCD_ADDR
                value: "{{ include "etcd.clusterDomain" .}}:2379"
              - name: PRODUCT_NAME
                value: "$(KB_CLUSTER_NAME)"
            command:
              - "/codis/bin/codis-dashboard"
            args:
              - "-c"
              - "/etc/codis/dashboard.toml"
              - "--host-admin"
              - "$(POD_IP):18080"
              - "--etcd"
              - "$(ETCD_ADDR)"
              - "--product_name"
              - "$(PRODUCT_NAME)"
              - "--pidfile"
              - "log/dashboard.pid"
              - "--remove-lock"
              - "--log-level=DEBUG"
            lifecycle:
              postStart:
                exec:
                  command: [ "/bin/bash", "-c", "/codis/bin/codis-admin --dashboard-list  --etcd=${ETCD_ADDR}" ]
              preStop:
                exec:
                  command: [ "/bin/sh", "-c", "PID=$(cat log/dashboard.pid) && kill $PID && while ps -p 1 > /dev/null; do sleep 1; done" ]
